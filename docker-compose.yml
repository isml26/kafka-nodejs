version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_HOST_NAME:kafka
      # - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.0.74.66:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  # app:
  #   container_name: app
  #   build: ./app
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - PORT=8080 
  #     - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #     - KAFKA_TOPIC=topic1
  #   depends_on:
  #     - postgres
  #   networks: 
  #     - kafka-app
  postgres:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to create tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks: 
      - inavitas-app 
networks:
  inavitas-app:
    driver: bridge